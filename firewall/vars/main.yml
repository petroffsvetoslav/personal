#Controls the state of the firewall service; whether it should be running (firewall_state)
#and/or enabled on system boot (firewall_enabled_at_boot).
firewall_state: started
firewall_enabled_at_boot: true
#Whether to flush all rules and chains whenever the firewall is restarted.
#Set this to false if there are other processes managing iptables (e.g. Docker).
firewall_flush_rules_and_chains: true
#A list of TCP or UDP ports (respectively) to open to incoming traffic.
firewall_allowed_tcp_ports:
  - "22"
  - "80"
  - "443"
  #- "7777"
firewall_allowed_udp_ports: []
#Forward src port to dest port, either TCP or UDP (respectively).
#firewall_forwarded_tcp_ports:
  #- { src: "22", dest: "7777" } #I've set the ssh port to be 7845 in security playbook, added it to allowed ports here and now forwarding can happen (e.g. ssh user@ip without -p flag)
#   - { src: "80", dest: "8080" }
# firewall_forwarded_udp_ports: []
#Any additional (custom) rules to be added to the firewall
#(in the same format you would add them via command line, e.g. iptables [rule]/ip6tables [rule])
firewall_additional_rules: []
firewall_ip6_additional_rules: []
#EXAMPLES FOR THE ABOVE
# Allow only the IP 167.89.89.18 to access port 4949 (Munin).
# firewall_additional_rules:
#   - "iptables -A INPUT -p tcp --dport 4949 -s 167.89.89.18 -j ACCEPT"

# Allow only the IP 214.192.48.21 to access port 3306 (MySQL).
# firewall_additional_rules:
#   - "iptables -A INPUT -p tcp --dport 3306 -s 214.192.48.21 -j ACCEPT"

firewall_log_dropped_packets: true #Whether to log dropped packets to syslog (messages will be prefixed with "Dropped by firewall: ").

firewall_disable_firewalld: false
firewall_disable_ufw: false
#Set to true to disable firewalld (installed by default on RHEL/CentOS) or ufw (installed by default on Ubuntu), respectively.
firewall_enable_ipv6: true #Set to false to disable configuration of ip6tables
